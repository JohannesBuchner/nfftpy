NFFTPY - Cython wrapper for NFFT library
========================================

NFFT is a C subroutine library for computing the nonequispaced discrete
Fourier transform (NDFT) and its generalisations in one or more dimensions, of
arbitrary input size, and of complex data.

License:

    Open-source, BSD-like.


Prerequisites:

    * WFFT library: http://www.fftw.org/

    * NFFT library: http://www-user.tu-chemnitz.de/~potts/nfft/


Notes:

    * The NFFT library does not always install out-of-the-box on 64-bit
    Linux. (Link failure, not yet investigated.)

    * NFFTPY is an early-stage work in progress. Contributions are welcome.


Cython files:

    * cnfft3.pxd - Cython interface file for nfft3.h (main NFFT header).
    Currently contains only the functions from the first half of nfft3.h

    * cnfftutil.pxd - Cython interface file for nfft3util.h (NFFT utility
    functions). Currently contains only those functions used in simple_test.pxd.

    * simple_test.pyx - Trivial cython translation of the NFFT example
    simple_test.c. Produces the same output.

    * simple_test_np.pyx - Work in progress, adapting simple_test to numpy.

    * nfftpy.pyx - Work in progress, class wrapper for NFFT.

Build files:

    * makefile - Build and test NFFTPY.

        make clean - delete files from previous builds

        make - build cython extensions using setup.py

        make test - test cython extensions (currently just module simple_test)


    * setup.py - Build cython extensions

Done:

    * simple_test.pxd runs as expected, producing output equivalent
    to the output from simple_test.c


To do:

    * Provide numpy access to the input and output arrays of an nfft_plan.
    (Initially by simple copying, then by memory sharing. Risk: a simple
    memory sharing implementation will not be able to ensure that the owner
    of the memory does not deallocate it while another user is still using it.

    * Finish nfftpy.pyx, class wrapper for an NFFT plan.

